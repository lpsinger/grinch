;##################################################
;# sections for each possible check
;##################################################
[idq]
; which IFOs we expect to report iDQ information
ifos = H1 L1

; the time by which we expect all IFOs to have reported they started looking for iDQ information
start = 60

; the time by which we expect all IFOs to have reported they finished looking for iDQ information
finish = 600

; the time by which we expect all IFOs to have finished reporting iDQ tables
tables = 600

; the time by which we expect all IFOs to have finished reporting iDQ timeseries information
timeseries = 600


[lib]
; the FAR threshold above which LIB will not follow-up events
; if not specified, we assume LIB follows up all events
far = 1.1574e-5

; the time by which we expect LIB to have reported that it started its follow-up.
start = 60

; if freq_thr is not supplied, this parameter controls the `finish' time for all events
; the time by which we expect LIB to have reported that it finished its follow-up.
finish = 86400
skymap = 86410

; if freq_thr is present, then this is the frequency at which we separate the follow-up processes
; into low_freq and high_freq runs, with different expected latencies.
; (freq > freq_thr) => high_freq
; else => low_freq
;freq_thr = 200

; the times by which we expect LIB jobs to have reported they finished
; these are specified separately for each frequency range (low vs. high)
low_freq_finish = 86400
low_freq_skymap = 86400
high_freq_finish = 86400
high_freq_skymap = 86400

[bayestar]
; the FAR threshold above which Bayestar will not follow-up events.
; if not specified, we assume Bayestar follows up all events
;far = 1.1574e-5

; the time by which we expect Bayestar to have reported it started.
start = 60

; the time by which we expect Bayestar to have reported it finished.
finish = 120

; the time by which we expect Bayestar to have posted a skymap to GraceDB
skymap = 130

[bayeswave]
; the FAR threshold above which BayesWave will not follow-up events.
; if not specified, we assume BayesWave follows up all events.
;far = 1.1574e-5

; the time by which we expect BayesWave to have reported it started.
start = 60

; if freq_thr is not supplied, this parameter controls the `finish' time for all events
; the time by which we expect BayesWave to have reported that it finished its follow-up.
;finish = 86400
;skymap = 86400

; if freq_thr is present, then this is the frequency at which we separate the follow-up processes
; into low_freq and high_freq runs, with different expected latencies.
; (freq > freq_thr) => high_freq
; else => low_freq
freq_thr = 200

; the times by which we expect BayesWave jobs to have reported they finished
; these are specified separately for each frequency range (low vs. high)
low_freq_finish = 86400
low_freq_skymap = 86400
high_freq_finish = 345600 432000
high_freq_skymap = 345600 432000

[lalinference]
; the FAR threshold above which LALInference will not follow-up events.
; if not specified, we assume LALInference follows up all events.
far = 1.1574e-5

; the time by which we expect LALInference to have reported it started.
start = 60

; the time by which we expect LALInference to have reported it finished.
finish = 86400

; the time by which we expect LALInference to have posted a skymap to GraceDB
skymap = 86400

[externaltriggers_search]
; the time by which we expect the external triggers search to have reported
dt = 120

[unblindinjections_search]
; the time by which we expect the unblind injection search to have reported
dt = 120

[plot_skymaps]
; the time by which we expect all attached FITS files to have an associated .png file
; This only checks for .png files corresponding to existing FITS files.
; if events are expected to have multiple FITS files attached at different times, all of which
; should be plotted, then we should specify multiple times here (corresponding to the expected
; latency of each FITS file)
dt = 120 86520

[json_skymaps]
; the time by which we expect all attached FITS files to have an associated .json file
; This only checks for .json files corresponding to existing FITS files.
; if events are expected to have multiple FITS files attached at different times, all of which
; should be plotted, then we should specify multiple times here (corresponding to the expected
; latency of each FITS file)
dt = 120 86520

[local_rates]
; the time after which we check for the local rate estimate.
; we check for local rates around the event GPS time and cration time separately
; but both checks use the same set of parameters (defined here).
dt = 0

; the window surrounding the event used in a GraceDB neighbors search to estimate the rate
window = 5.0

; the threshold rate above which we alert humans 
rate = 1.0

[far]
; the time after which we check for a reasonable FAR
dt = 0.0

; the lower limit on allowable FAR
minFAR = 0.0

; the upper limit on allowable FAR
maxFAR = 1e-3

[eventcreation]
; the amount of time we wait before checking for proper event creation.
; this may not necessarily be zero if we expect some latency between event 
; creation and the actual insertion of all expected files into GraceDB.
dt = 0.0

;##################################################
;# sections associating checks with event types
;##################################################

; the checks performed for a default event
[default]
notify = kats@ligo.mit.edu reed.essick@ligo.org
local_rates = reed.essick@ligo.org

externaltriggers_search = aurban@uwm.edu reed.essick@ligo.org
unblindinjections_search = aurban@uwm.edu reed.essick@ligo.org
plot_skymaps = aurban@uwm.edu reed.essick@ligo.org
json_skymaps = roy@caltech.edu reed.essick@ligo.org

idq_start  = reed.essick@ligo.org
idq_finish = reed.essick@ligo.org
idq_timeseries = reed.essick@ligo.org
idq_tables = reed.essick@ligo.org

; additional checks performed for burst_cwb_allsky events
[burst_cwb_allsky]
eventcreation = marco.drago@aei.mpg.de klimenko@phys.ufl.edu
far = marco.drago@aei.mpg.de klimenko@phys.ufl.edu

lib_start = rlynch@mit.edu salvatore.vitale@ligo.org kats@ligo.mit.edu reed.essick@ligo.org
lib_finish = rlynch@mit.edu salvatore.vitale@ligo.org kats@ligo.mit.edu reed.essick@ligo.org
lib_skymap = rlynch@mit.edu salvatore.vitale@ligo.org kats@ligo.mit.edu reed.essick@ligo.org

bayeswave_start =  meg.millhouse@gmail.com jkanner@caltech.edu tyson.littenberg@northwestern.edu 
bayeswave_finish =  meg.millhouse@gmail.com jkanner@caltech.edu tyson.littenberg@northwestern.edu 
bayeswave_skymap = meg.millhouse@gmail.com jkanner@caltech.edu tyson.littenberg@northwestern.edu 

; additional checks performed for burst_lib_allsky events
[burst_lib_allsky]
eventcreation = rlynch@mit.edu salvatore.vitale@ligo.org kats@ligo.mit.edu reed.essick@ligo.org
far = rlynch@mit.edu salvatore.vitale@ligo.org kats@ligo.mit.edu reed.essick@ligo.org

lib_start = rlynch@mit.edu salvatore.vitale@ligo.org kats@ligo.mit.edu reed.essick@ligo.org
lib_finish = rlynch@mit.edu salvatore.vitale@ligo.org kats@ligo.mit.edu reed.essick@ligo.org
lib_skymap = rlynch@mit.edu salvatore.vitale@ligo.org kats@ligo.mit.edu reed.essick@ligo.org

; additional checks performed for cbc_gstlal_lowmass events
[cbc_gstlal_lowmass]
eventcreation =  cody.messick@psu.edu; crh184@psu.edu; kcannon@cita.utoronto.ca
far = cody.messick@psu.edu; crh184@psu.edu; kcannon@cita.utoronto.ca

bayestar_start = leo.singer@ligo.org aurban@uwm.edu 
bayestar_finish = leo.singer@ligo.org aurban@uwm.edu 
bayestar_skymap = leo.singer@ligo.org aurban@uwm.edu

lalinference_start = vivien.raymond@aei.mpg.de aurban@uwm.edu salvatore.vitale@ligo.org jveitch@star.sr.bham.ac.uk 
lalinference_finish = vivien.raymond@aei.mpg.de aurban@uwm.edu salvatore.vitale@ligo.org jveitch@star.sr.bham.ac.uk
lalinference_skymap = vivien.raymond@aei.mpg.de aurban@uwm.edu salvatore.vitale@ligo.org jveitch@star.sr.bham.ac.uk

; additional checks performed for cbc_gstlal_highmass events
[cbc_gstlal_highmass]
eventcreation =  cody.messick@psu.edu crh184@psu.edu kcannon@cita.utoronto.ca 
far = cody.messick@psu.edu; crh184@psu.edu; kcannon@cita.utoronto.ca

bayestar_start = leo.singer@ligo.org aurban@uwm.edu 
bayestar_finish = leo.singer@ligo.org aurban@uwm.edu 
bayestar_skymap = leo.singer@ligo.org aurban@uwm.edu

lalinference_start = vivien.raymond@aei.mpg.de aurban@uwm.edu salvatore.vitale@ligo.org jveitch@star.sr.bham.ac.uk 
lalinference_finish = vivien.raymond@aei.mpg.de aurban@uwm.edu salvatore.vitale@ligo.org jveitch@star.sr.bham.ac.uk 
lalinference_skymap = vivien.raymond@aei.mpg.de aurban@uwm.edu salvatore.vitale@ligo.org jveitch@star.sr.bham.ac.uk

; additional checks performed for cbc_mbtaonline events
[cbc_mbtaonline]
eventcreation = thomas.adams@lapp.in2p3.fr mours@lapp.in2p3.fr guidi@uniurb.it 
far = thomas.adams@lapp.in2p3.fr mours@lapp.in2p3.fr guidi@uniurb.it

bayestar_start = leo.singer@ligo.org aurban@uwm.edu 
bayestar_finish = leo.singer@ligo.org aurban@uwm.edu 
bayestar_skymap = leo.singer@ligo.org aurban@uwm.edu

lalinference_start = vivien.raymond@aei.mpg.de aurban@uwm.edu salvatore.vitale@ligo.org jveitch@star.sr.bham.ac.uk 
lalinference_finish = vivien.raymond@aei.mpg.de aurban@uwm.edu salvatore.vitale@ligo.org jveitch@star.sr.bham.ac.uk
lalinference_skymap = vivien.raymond@aei.mpg.de aurban@uwm.edu salvatore.vitale@ligo.org jveitch@star.sr.bham.ac.uk
