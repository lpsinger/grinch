#!/usr/bin/env python

import os, sys
import logging
from optparse import Option, OptionParser
from grinch.gcnhandler import archive  # Function that filters GCN notices

parser = OptionParser(
    description = __doc__,
    usage = "%prog [options] VOEVENT.xml",
    option_list = [
        Option("-o", "--output", metavar="FILE", default=None,
            help="Name of file in which to print log statements [default: print to stdout]")
    ]
)
opts, args = parser.parse_args()

# Set up logger
if opts.output:
    logging.logging.basicConfig(level=logging.DEBUG, file=opts.output,
        format='%(asctime)s.%(msecs)d %(levelname)s: %(message)s', datefmt="%Y-%m-%d %H:%M:%S")
else:
    logging.basicConfig(level=logging.DEBUG, stream=sys.stdout,
        format='%(asctime)s.%(msecs)d %(levelname)s: %(message)s', datefmt="%Y-%m-%d %H:%M:%S")

# Get name of VOEvent file from positional command line argument
voevent = args[0]

# Store the textual content of the VOEvent
with open (voevent, "r") as f:
    payload = f.read()

# Call the event filter
archive( payload, test=True )
